admin.thread.size.op=20
spring.logi-job.jdbc-url=jdbc:mariadb://10.179.222.237:4859/es_manager_test?useUnicode=true&characterEncoding=utf8&jdbcCompliantTruncation=true&allowMultiQueries=true&useSSL=false&alwaysAutoGeneratedKeys=true&serverTimezone=GMT%2B8
spring.logi-job.username=didi_cCHn
spring.logi-job.password=KEA9kEPR4
spring.logi-job.driver-class-name=org.mariadb.jdbc.Driver
spring.logi-job.max-lifetime=60000
spring.logi-job.init-sql=true
spring.logi-job.init-thread-num=50
spring.logi-job.max-thread-num=100
spring.logi-job.log-exipre=3 # 日志保存天数，以天为单位
spring.logi-job.app_name=arius_test1234
spring.logi-job.claim-strategy=com.didiglobal.logi.job.core.consensual.RandomConsensual
spring.datasource.name=data
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.druid.url=jdbc:mariadb://10.179.222.237:4859/es_manager_test?useUnicode=true&characterEncoding=utf8&jdbcCompliantTruncation=true&allowMultiQueries=true&useSSL=false&alwaysAutoGeneratedKeys=true&serverTimezone=GMT%2B8
spring.datasource.druid.username=didi_cCHn
spring.datasource.druid.password=KEA9kEPR4
spring.datasource.druid.initialSize=10
spring.datasource.druid.validationQueryTimeout=5000
spring.datasource.druid.transactionQueryTimeout=60000
spring.datasource.druid.minIdle=10
spring.datasource.druid.maxActive=30
spring.datasource.druid.max-wait=60000
spring.datasource.druid.keepAlive=true
spring.datasource.druid.time-between-eviction-runs-millis=1000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.defaultAutoCommit=true
spring.datasource.druid.validationQuery=select 'x'
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.testOnBorrow=true
spring.datasource.druid.logAbandoned=true
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-open-prepared-statements=50
spring.datasource.druid.filters=stat,wall
es.update.cluster.name=logi-elasticsearch-7.6.0
es.client.cluster.port=8061
es.client.io.thread.count=2
########################### 索引名称相关配置 begin ###########################
# 索引名称的配置只需要配置名称，不需要配置数中心前缀
# DataCentreUtil会根据单元化部署的数据中心给索引加上数据中心前缀
arius.template.qutoa.notiry.record=arius_template_qutoa_notiry_record
arius.template.quota.usage=arius_template_quota_usage
arius.template.record.quota.usage=record_arius_template_quota_usage
arius.template.capacity.plan.region.statis=arius_capacity_plan_region_statis
es.dsl.analyze.index.name=arius.dsl.analyze.result
es.dsl.metrics.index.name=arius.dsl.metrics
arius.gateway.join.name=arius.gateway.join
es.dsl.template.index.name=arius.dsl.template
es.template.field.index.name=arius.template.field
es.dsl.field.use.index.name=arius.dsl.field.use
es.template.mapping.index.name=arius.template.mapping
es.index.size.index.name=arius.index.size
es.template.hit.index.name=arius.template.hit
# 国内原始gateway日志索引
arius.gateway.original.log.index.name=foundation_fd.data-online.arius.gateway
# appid维度访问次数索引
es.appid.template.access.index.name=arius.appid.template.access
# 索引维度访问次数索引
es.indexname.access.index.name=arius.indexname.access
# 索引模板维度访问次数索引
es.template.access.index.name=arius.template.access
# gateway 访问统计索引
es.gateway.info.index.name=arius.gateway.join
# 不同维度的es监控数据索引
es.node_index.info.index.name=arius_stats_node_index_info
es.node.info.index.name=arius_stats_node_info
es.dashboard.info.name=arius_stats_dashboard_info
es.index.info.index.name=arius_stats_index_info
es.index.cat.info=arius_cat_index_info
es.cluster.info.index.name=arius_stats_cluster_info
es.index_node.info.index.name=arius_stats_index_node_info
es.ingest.info.index.name=arius_stats_ingest_info
es.dcdr.info.index.name=arius_stats_dcdr_info
# es 索引标签数据
es.template.label.index.name=v2.arius.template.label
# es 索引健康分
es.template.health.degree.index.name=arius.template.health.degree
# es 索引价值
es.template.value.index.name=arius.template.value
es.template.value.record.index.name=record.arius.template.value
#健康检查
es.health.check.info.index.name=health_check_info
#健康分
es.health.degress.index.name=index_health_degree
########################### 索引名称相关配置 end ###########################
########################### 索引统计相关配置 begin ###########################
# 全平台集群数量统计指标中上限
es.metrics.cluster.buckets.max.num=2000
# 单集群获取统计指标中节点数量上限
es.metrics.nodes.buckets.max.num=1000
# 单集群获取统计指标中索引数量上限
es.metrics.indices.buckets.max.num=10000
########################### 索引统计相关配置 end ###########################
# gateway相关配置
es.gateway.url=10.190.34.104
# gateway server http port
es.gateway.port=8200
es.appid=1
es.password=azAWiJhxkho33ac
scroll.timeout=60s
extend.service=
extend.fileStorage=s3
extend.department=defaultDep
extend.employee=defaultEmployee
extend.loginProtocol=defaultLogin
default.query.limit=800
delay.delete.expired.template.time=now-1d
history.query.time=now-93d
recent.create.field.day.count=7
monitor.n9e.url=http://10.86.76.13:8085/api/n9e  #夜莺监控mock地址
monitor.n9e.collector-url=http://10.86.76.13:8085/v1/n9e #夜莺监控上报地址
monitor.odin.enable=true
monitor.odin.tree.url=http://tree.odin.intra.xiaojukeji.com
monitor.odin.monitor.url=http://monitor.odin.xiaojukeji.com
monitor.odin.collector=url: http://collect.odin.xiaojukeji.com
monitor.odin.namespace=kafka-manager-custom.kafka-manager.YS01.Bigdata-Kafka-Cloud.bigdata-infra.didi.com
monitor.odin.securename=sys.kafka-manager
monitor.odin.securekey=5fBbD6p84Oe7UT4qrttEBiwaR77S63do
cloud.default.server=http://ddcloud.xiaojukeji.com/kube/api/v2
cloud.default.token=e9bbe810d7567dc28e9240cf4b14d869
cloud.us01.server=http://us.ddcloud.xiaojukeji.com/kube/api/v2
cloud.us01.token=8b1232c1ce661b7ea424987b50934bf5
cloud.basic.admins=zhuyefeng,dingshilei,xiaosonglin
cloud.basic.permServer=http://perm.odin.intra.xiaojukeji.com
cloud.basic.treeServer=http://tree.odin.intra.xiaojukeji.com
cloud.basic.maxRollbackCnt=20
cloud.basic.selfServer=http://10.168.116.116:8081
cloud.basic.cluster.default=pluginIds: 6,8,10,12,14,16,18,20,22,24
cert.disable=false
cert.server=http://cert.odin.intra.xiaojukeji.com
cert.calleeName=sys.data_commercializ
cert.keyName=Nnl8x7liPMar1rYsJL9p9f4p8U7Nz6lc
zeus.server=http://10.96.65.64:8010
zeus.token=9e2dbb6e5b1e594d1820e0f21669b240
zeus.templateId=3
zeus.user=root
zeus.batch=2
zeus.timeOut=300
zeus.tolerance=0
fs.minio.endpoint=http://10.90.27.13:8095
fs.minio.accessKeyID=AKDD000000000017NLIIDATA33GNAZ
fs.minio.secretAccessKey:=
fs.minio.bucket=datamarket
fs.gift.upload-url=http://10.14.128.20:8000/resource/
fs.gift.download-url=http://10.14.128.20:8002/static/
fs.gift.namespace=bigdata_kafka
s3.endpoint=s3-gzpu-inter.didistatic.com
s3.access-key=AKDD00000000000O5XVS8IBAXT7R9X
s3.secret-key=ASDDhiAaCIjLqFswvIXzyVvkqLJKYtLNLAlabXFS
s3.bucket=logi-data-es
admin.url.console=http://10.190.6.107/
admin.url.kibana=http://10.160.80.135:8061/
admin.thread.size=
admin.thread.op=20
#健康检查
health.check.empty.indices.threshold.day=30
health.check.index.doc.averge.size=2048
health.check.index.doc.result.level=5,10,15,20,25
health.check.index.mapping.large.size=5000
health.check.index.mapping.result.level=5,10,15,20,25
health.check.small.shard.size=60
health.check.small.shard.result.level=5,10,15,20,25
health.check.small.shard.repair=false
